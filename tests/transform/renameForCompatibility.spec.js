const { renameForCompatibility } = require('transform')

test('Neutral units are renamed to be compatible with the old API', () => {
  expect(renameForCompatibility({ id: 1, name: 'BattleStationMineralField' }).name).toEqual(
    'NEUTRAL_BATTLESTATIONMINERALFIELD'
  )
  expect(renameForCompatibility({ id: 1, name: 'BattleStationMineralField750' }).name).toEqual(
    'NEUTRAL_BATTLESTATIONMINERALFIELD750'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleRockTowerDebris' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLEROCKTOWERDEBRIS'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleRockTowerDiagonal' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLEROCKTOWERDIAGONAL'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleRockTowerPushUnit' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLEROCKTOWERPUSHUNIT'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleTerranTowerDebris' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLETERRANTOWERDEBRIS'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleTerranTowerDiagonal' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLETERRANTOWERDIAGONAL'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleTerranTowerPushUnit' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLETERRANTOWERPUSHUNIT'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleTerranTowerPushUnitRampLeft' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLETERRANTOWERPUSHUNITRAMPLEFT'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleTerranTowerPushUnitRampRight' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLETERRANTOWERPUSHUNITRAMPRIGHT'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleTerranTowerRampLeft' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLETERRANTOWERRAMPLEFT'
  )
  expect(renameForCompatibility({ id: 1, name: 'CollapsibleTerranTowerRampRight' }).name).toEqual(
    'NEUTRAL_COLLAPSIBLETERRANTOWERRAMPRIGHT'
  )
  expect(renameForCompatibility({ id: 1, name: 'DebrisRampLeft' }).name).toEqual('NEUTRAL_DEBRISRAMPLEFT')
  expect(renameForCompatibility({ id: 1, name: 'DebrisRampRight' }).name).toEqual('NEUTRAL_DEBRISRAMPRIGHT')
  expect(renameForCompatibility({ id: 1, name: 'DestructibleDebris6x6' }).name).toEqual('NEUTRAL_DESTRUCTIBLEDEBRIS6X6')
  expect(renameForCompatibility({ id: 1, name: 'DestructibleDebrisRampDiagonalHugeBLUR' }).name).toEqual(
    'NEUTRAL_DESTRUCTIBLEDEBRISRAMPDIAGONALHUGEBLUR'
  )
  expect(renameForCompatibility({ id: 1, name: 'DestructibleDebrisRampDiagonalHugeULBR' }).name).toEqual(
    'NEUTRAL_DESTRUCTIBLEDEBRISRAMPDIAGONALHUGEULBR'
  )
  expect(renameForCompatibility({ id: 1, name: 'DestructibleRock6x6' }).name).toEqual('NEUTRAL_DESTRUCTIBLEROCK6X6')
  expect(renameForCompatibility({ id: 1, name: 'DestructibleRockEx1DiagonalHugeBLUR' }).name).toEqual(
    'NEUTRAL_DESTRUCTIBLEROCKEX1DIAGONALHUGEBLUR'
  )
  expect(renameForCompatibility({ id: 1, name: 'ForceField' }).name).toEqual('NEUTRAL_FORCEFIELD')
  expect(renameForCompatibility({ id: 1, name: 'KarakFemale' }).name).toEqual('NEUTRAL_KARAKFEMALE')
  expect(renameForCompatibility({ id: 1, name: 'LabMineralField' }).name).toEqual('NEUTRAL_LABMINERALFIELD')
  expect(renameForCompatibility({ id: 1, name: 'LabMineralField750' }).name).toEqual('NEUTRAL_LABMINERALFIELD750')
  expect(renameForCompatibility({ id: 1, name: 'MineralField' }).name).toEqual('NEUTRAL_MINERALFIELD')
  expect(renameForCompatibility({ id: 1, name: 'MineralField750' }).name).toEqual('NEUTRAL_MINERALFIELD750')
  expect(renameForCompatibility({ id: 1, name: 'ProtossVespeneGeyser' }).name).toEqual('NEUTRAL_PROTOSSVESPENEGEYSER')
  expect(renameForCompatibility({ id: 1, name: 'PurifierMineralField' }).name).toEqual('NEUTRAL_PURIFIERMINERALFIELD')
  expect(renameForCompatibility({ id: 1, name: 'PurifierMineralField750' }).name).toEqual(
    'NEUTRAL_PURIFIERMINERALFIELD750'
  )
  expect(renameForCompatibility({ id: 1, name: 'PurifierRichMineralField' }).name).toEqual(
    'NEUTRAL_PURIFIERRICHMINERALFIELD'
  )
  expect(renameForCompatibility({ id: 1, name: 'PurifierRichMineralField750' }).name).toEqual(
    'NEUTRAL_PURIFIERRICHMINERALFIELD750'
  )
  expect(renameForCompatibility({ id: 1, name: 'PurifierVespeneGeyser' }).name).toEqual('NEUTRAL_PURIFIERVESPENEGEYSER')
  expect(renameForCompatibility({ id: 1, name: 'RichMineralField' }).name).toEqual('NEUTRAL_RICHMINERALFIELD')
  expect(renameForCompatibility({ id: 1, name: 'RichMineralField750' }).name).toEqual('NEUTRAL_RICHMINERALFIELD750')
  expect(renameForCompatibility({ id: 1, name: 'RichVespeneGeyser' }).name).toEqual('NEUTRAL_RICHVESPENEGEYSER')
  expect(renameForCompatibility({ id: 1, name: 'Scantipede' }).name).toEqual('NEUTRAL_SCANTIPEDE')
  expect(renameForCompatibility({ id: 1, name: 'ShakurasVespeneGeyser' }).name).toEqual('NEUTRAL_SHAKURASVESPENEGEYSER')
  expect(renameForCompatibility({ id: 1, name: 'SpacePlatformGeyser' }).name).toEqual('NEUTRAL_SPACEPLATFORMGEYSER')
  expect(renameForCompatibility({ id: 1, name: 'UnbuildableBricksDestructible' }).name).toEqual(
    'NEUTRAL_UNBUILDABLEBRICKSDESTRUCTIBLE'
  )
  expect(renameForCompatibility({ id: 1, name: 'UnbuildablePlatesDestructible' }).name).toEqual(
    'NEUTRAL_UNBUILDABLEPLATESDESTRUCTIBLE'
  )
  expect(renameForCompatibility({ id: 1, name: 'UtilityBot' }).name).toEqual('NEUTRAL_UTILITYBOT')
  expect(renameForCompatibility({ id: 1, name: 'VespeneGeyser' }).name).toEqual('NEUTRAL_VESPENEGEYSER')
  expect(renameForCompatibility({ id: 1, name: 'XelNagaTower' }).name).toEqual('NEUTRAL_XELNAGATOWER')
})

test('Protoss units are renamed to be compatible with the old API', () => {
  expect(renameForCompatibility({ id: 1, name: 'Adept' }).name).toEqual('PROTOSS_ADEPT')
  expect(renameForCompatibility({ id: 1, name: 'AdeptPhaseShift' }).name).toEqual('PROTOSS_ADEPTPHASESHIFT')
  expect(renameForCompatibility({ id: 1, name: 'Archon' }).name).toEqual('PROTOSS_ARCHON')
  expect(renameForCompatibility({ id: 1, name: 'Assimilator' }).name).toEqual('PROTOSS_ASSIMILATOR')
  expect(renameForCompatibility({ id: 1, name: 'AssimilatorRich' }).name).toEqual('PROTOSS_ASSIMILATORRICH')
  expect(renameForCompatibility({ id: 1, name: 'Carrier' }).name).toEqual('PROTOSS_CARRIER')
  expect(renameForCompatibility({ id: 1, name: 'Colossus' }).name).toEqual('PROTOSS_COLOSSUS')
  expect(renameForCompatibility({ id: 1, name: 'CyberneticsCore' }).name).toEqual('PROTOSS_CYBERNETICSCORE')
  expect(renameForCompatibility({ id: 1, name: 'DarkShrine' }).name).toEqual('PROTOSS_DARKSHRINE')
  expect(renameForCompatibility({ id: 1, name: 'DarkTemplar' }).name).toEqual('PROTOSS_DARKTEMPLAR')
  expect(renameForCompatibility({ id: 1, name: 'Disruptor' }).name).toEqual('PROTOSS_DISRUPTOR')
  expect(renameForCompatibility({ id: 1, name: 'DisruptorPhased' }).name).toEqual('PROTOSS_DISRUPTORPHASED')
  expect(renameForCompatibility({ id: 1, name: 'FleetBeacon' }).name).toEqual('PROTOSS_FLEETBEACON')
  expect(renameForCompatibility({ id: 1, name: 'Forge' }).name).toEqual('PROTOSS_FORGE')
  expect(renameForCompatibility({ id: 1, name: 'Gateway' }).name).toEqual('PROTOSS_GATEWAY')
  expect(renameForCompatibility({ id: 1, name: 'HighTemplar' }).name).toEqual('PROTOSS_HIGHTEMPLAR')
  expect(renameForCompatibility({ id: 1, name: 'Immortal' }).name).toEqual('PROTOSS_IMMORTAL')
  expect(renameForCompatibility({ id: 1, name: 'Interceptor' }).name).toEqual('PROTOSS_INTERCEPTOR')
  expect(renameForCompatibility({ id: 1, name: 'Mothership' }).name).toEqual('PROTOSS_MOTHERSHIP')
  expect(renameForCompatibility({ id: 1, name: 'MothershipCore' }).name).toEqual('PROTOSS_MOTHERSHIPCORE')
  expect(renameForCompatibility({ id: 1, name: 'Nexus' }).name).toEqual('PROTOSS_NEXUS')
  expect(renameForCompatibility({ id: 1, name: 'Observer' }).name).toEqual('PROTOSS_OBSERVER')
  expect(renameForCompatibility({ id: 1, name: 'Oracle' }).name).toEqual('PROTOSS_ORACLE')
  expect(renameForCompatibility({ id: 1, name: 'OracleStasisTrap' }).name).toEqual('PROTOSS_ORACLESTASISTRAP')
  expect(renameForCompatibility({ id: 1, name: 'Phoenix' }).name).toEqual('PROTOSS_PHOENIX')
  expect(renameForCompatibility({ id: 1, name: 'PhotonCannon' }).name).toEqual('PROTOSS_PHOTONCANNON')
  expect(renameForCompatibility({ id: 1, name: 'Probe' }).name).toEqual('PROTOSS_PROBE')
  expect(renameForCompatibility({ id: 1, name: 'Pylon' }).name).toEqual('PROTOSS_PYLON')
  expect(renameForCompatibility({ id: 1, name: 'PylonOvercharged' }).name).toEqual('PROTOSS_PYLONOVERCHARGED')
  expect(renameForCompatibility({ id: 1, name: 'RoboticsBay' }).name).toEqual('PROTOSS_ROBOTICSBAY')
  expect(renameForCompatibility({ id: 1, name: 'RoboticsFacility' }).name).toEqual('PROTOSS_ROBOTICSFACILITY')
  expect(renameForCompatibility({ id: 1, name: 'Sentry' }).name).toEqual('PROTOSS_SENTRY')
  expect(renameForCompatibility({ id: 1, name: 'ShieldBattery' }).name).toEqual('PROTOSS_SHIELDBATTERY')
  expect(renameForCompatibility({ id: 1, name: 'Stalker' }).name).toEqual('PROTOSS_STALKER')
  expect(renameForCompatibility({ id: 1, name: 'Stargate' }).name).toEqual('PROTOSS_STARGATE')
  expect(renameForCompatibility({ id: 1, name: 'Tempest' }).name).toEqual('PROTOSS_TEMPEST')
  expect(renameForCompatibility({ id: 1, name: 'TemplarArchive' }).name).toEqual('PROTOSS_TEMPLARARCHIVE')
  expect(renameForCompatibility({ id: 1, name: 'TwilightCouncil' }).name).toEqual('PROTOSS_TWILIGHTCOUNCIL')
  expect(renameForCompatibility({ id: 1, name: 'VoidRay' }).name).toEqual('PROTOSS_VOIDRAY')
  expect(renameForCompatibility({ id: 1, name: 'WarpGate' }).name).toEqual('PROTOSS_WARPGATE')
  expect(renameForCompatibility({ id: 1, name: 'WarpPrism' }).name).toEqual('PROTOSS_WARPPRISM')
  expect(renameForCompatibility({ id: 1, name: 'WarpPrismPhasing' }).name).toEqual('PROTOSS_WARPPRISMPHASING')
  expect(renameForCompatibility({ id: 1, name: 'Zealot' }).name).toEqual('PROTOSS_ZEALOT')
})

test('Terran units are renamed to be compatible with the old API', () => {
  expect(renameForCompatibility({ id: 1, name: 'Armory' }).name).toEqual('TERRAN_ARMORY')
  expect(renameForCompatibility({ id: 1, name: 'AutoTurret' }).name).toEqual('TERRAN_AUTOTURRET')
  expect(renameForCompatibility({ id: 1, name: 'Banshee' }).name).toEqual('TERRAN_BANSHEE')
  expect(renameForCompatibility({ id: 1, name: 'Barracks' }).name).toEqual('TERRAN_BARRACKS')
  expect(renameForCompatibility({ id: 1, name: 'BarracksFlying' }).name).toEqual('TERRAN_BARRACKSFLYING')
  expect(renameForCompatibility({ id: 1, name: 'BarracksReactor' }).name).toEqual('TERRAN_BARRACKSREACTOR')
  expect(renameForCompatibility({ id: 1, name: 'BarracksTechLab' }).name).toEqual('TERRAN_BARRACKSTECHLAB')
  expect(renameForCompatibility({ id: 1, name: 'Battlecruiser' }).name).toEqual('TERRAN_BATTLECRUISER')
  expect(renameForCompatibility({ id: 1, name: 'Bunker' }).name).toEqual('TERRAN_BUNKER')
  expect(renameForCompatibility({ id: 1, name: 'CommandCenter' }).name).toEqual('TERRAN_COMMANDCENTER')
  expect(renameForCompatibility({ id: 1, name: 'CommandCenterFlying' }).name).toEqual('TERRAN_COMMANDCENTERFLYING')
  expect(renameForCompatibility({ id: 1, name: 'Cyclone' }).name).toEqual('TERRAN_CYCLONE')
  expect(renameForCompatibility({ id: 1, name: 'EngineeringBay' }).name).toEqual('TERRAN_ENGINEERINGBAY')
  expect(renameForCompatibility({ id: 1, name: 'Factory' }).name).toEqual('TERRAN_FACTORY')
  expect(renameForCompatibility({ id: 1, name: 'FactoryFlying' }).name).toEqual('TERRAN_FACTORYFLYING')
  expect(renameForCompatibility({ id: 1, name: 'FactoryReactor' }).name).toEqual('TERRAN_FACTORYREACTOR')
  expect(renameForCompatibility({ id: 1, name: 'FactoryTechLab' }).name).toEqual('TERRAN_FACTORYTECHLAB')
  expect(renameForCompatibility({ id: 1, name: 'FusionCore' }).name).toEqual('TERRAN_FUSIONCORE')
  expect(renameForCompatibility({ id: 1, name: 'Ghost' }).name).toEqual('TERRAN_GHOST')
  expect(renameForCompatibility({ id: 1, name: 'GhostAcademy' }).name).toEqual('TERRAN_GHOSTACADEMY')
  expect(renameForCompatibility({ id: 1, name: 'Hellion' }).name).toEqual('TERRAN_HELLION')
  expect(renameForCompatibility({ id: 1, name: 'HellionTank' }).name).toEqual('TERRAN_HELLIONTANK')
  expect(renameForCompatibility({ id: 1, name: 'KD8Charge' }).name).toEqual('TERRAN_KD8CHARGE')
  expect(renameForCompatibility({ id: 1, name: 'Liberator' }).name).toEqual('TERRAN_LIBERATOR')
  expect(renameForCompatibility({ id: 1, name: 'LiberatorAG' }).name).toEqual('TERRAN_LIBERATORAG')
  expect(renameForCompatibility({ id: 1, name: 'MULE' }).name).toEqual('TERRAN_MULE')
  expect(renameForCompatibility({ id: 1, name: 'Marauder' }).name).toEqual('TERRAN_MARAUDER')
  expect(renameForCompatibility({ id: 1, name: 'Marine' }).name).toEqual('TERRAN_MARINE')
  expect(renameForCompatibility({ id: 1, name: 'Medivac' }).name).toEqual('TERRAN_MEDIVAC')
  expect(renameForCompatibility({ id: 1, name: 'MissileTurret' }).name).toEqual('TERRAN_MISSILETURRET')
  expect(renameForCompatibility({ id: 1, name: 'Nuke' }).name).toEqual('TERRAN_NUKE')
  expect(renameForCompatibility({ id: 1, name: 'OrbitalCommand' }).name).toEqual('TERRAN_ORBITALCOMMAND')
  expect(renameForCompatibility({ id: 1, name: 'OrbitalCommandFlying' }).name).toEqual('TERRAN_ORBITALCOMMANDFLYING')
  expect(renameForCompatibility({ id: 1, name: 'PlanetaryFortress' }).name).toEqual('TERRAN_PLANETARYFORTRESS')
  expect(renameForCompatibility({ id: 1, name: 'PointDefenseDrone' }).name).toEqual('TERRAN_POINTDEFENSEDRONE')
  expect(renameForCompatibility({ id: 1, name: 'Raven' }).name).toEqual('TERRAN_RAVEN')
  expect(renameForCompatibility({ id: 1, name: 'Reactor' }).name).toEqual('TERRAN_REACTOR')
  expect(renameForCompatibility({ id: 1, name: 'Reaper' }).name).toEqual('TERRAN_REAPER')
  expect(renameForCompatibility({ id: 1, name: 'Refinery' }).name).toEqual('TERRAN_REFINERY')
  expect(renameForCompatibility({ id: 1, name: 'RefineryRich' }).name).toEqual('TERRAN_REFINERYRICH')
  expect(renameForCompatibility({ id: 1, name: 'SCV' }).name).toEqual('TERRAN_SCV')
  expect(renameForCompatibility({ id: 1, name: 'SensorTower' }).name).toEqual('TERRAN_SENSORTOWER')
  expect(renameForCompatibility({ id: 1, name: 'SiegeTank' }).name).toEqual('TERRAN_SIEGETANK')
  expect(renameForCompatibility({ id: 1, name: 'SiegeTankSieged' }).name).toEqual('TERRAN_SIEGETANKSIEGED')
  expect(renameForCompatibility({ id: 1, name: 'Starport' }).name).toEqual('TERRAN_STARPORT')
  expect(renameForCompatibility({ id: 1, name: 'StarportFlying' }).name).toEqual('TERRAN_STARPORTFLYING')
  expect(renameForCompatibility({ id: 1, name: 'StarportReactor' }).name).toEqual('TERRAN_STARPORTREACTOR')
  expect(renameForCompatibility({ id: 1, name: 'StarportTechLab' }).name).toEqual('TERRAN_STARPORTTECHLAB')
  expect(renameForCompatibility({ id: 1, name: 'SupplyDepot' }).name).toEqual('TERRAN_SUPPLYDEPOT')
  expect(renameForCompatibility({ id: 1, name: 'SupplyDepotLowered' }).name).toEqual('TERRAN_SUPPLYDEPOTLOWERED')
  expect(renameForCompatibility({ id: 1, name: 'TechLab' }).name).toEqual('TERRAN_TECHLAB')
  expect(renameForCompatibility({ id: 1, name: 'Thor' }).name).toEqual('TERRAN_THOR')
  expect(renameForCompatibility({ id: 1, name: 'ThorAP' }).name).toEqual('TERRAN_THORAP')
  expect(renameForCompatibility({ id: 1, name: 'VikingAssault' }).name).toEqual('TERRAN_VIKINGASSAULT')
  expect(renameForCompatibility({ id: 1, name: 'VikingFighter' }).name).toEqual('TERRAN_VIKINGFIGHTER')
  expect(renameForCompatibility({ id: 1, name: 'WidowMine' }).name).toEqual('TERRAN_WIDOWMINE')
  expect(renameForCompatibility({ id: 1, name: 'WidowMineBurrowed' }).name).toEqual('TERRAN_WIDOWMINEBURROWED')
})

test('Zerg units are renamed to be compatible with the old API', () => {
  expect(renameForCompatibility({ id: 1, name: 'InfestorTerran' }).name).toEqual('ZERG_INFESTORTERRAN')
  expect(renameForCompatibility({ id: 1, name: 'Baneling' }).name).toEqual('ZERG_BANELING')
  expect(renameForCompatibility({ id: 1, name: 'BanelingBurrowed' }).name).toEqual('ZERG_BANELINGBURROWED')
  expect(renameForCompatibility({ id: 1, name: 'BanelingCocoon' }).name).toEqual('ZERG_BANELINGCOCOON')
  expect(renameForCompatibility({ id: 1, name: 'BanelingNest' }).name).toEqual('ZERG_BANELINGNEST')
  expect(renameForCompatibility({ id: 1, name: 'BroodLord' }).name).toEqual('ZERG_BROODLORD')
  expect(renameForCompatibility({ id: 1, name: 'BroodLordCocoon' }).name).toEqual('ZERG_BROODLORDCOCOON')
  expect(renameForCompatibility({ id: 1, name: 'Broodling' }).name).toEqual('ZERG_BROODLING')
  expect(renameForCompatibility({ id: 1, name: 'Changeling' }).name).toEqual('ZERG_CHANGELING')
  expect(renameForCompatibility({ id: 1, name: 'ChangelingMarine' }).name).toEqual('ZERG_CHANGELINGMARINE')
  expect(renameForCompatibility({ id: 1, name: 'ChangelingMarineShield' }).name).toEqual('ZERG_CHANGELINGMARINESHIELD')
  expect(renameForCompatibility({ id: 1, name: 'ChangelingZealot' }).name).toEqual('ZERG_CHANGELINGZEALOT')
  expect(renameForCompatibility({ id: 1, name: 'ChangelingZergling' }).name).toEqual('ZERG_CHANGELINGZERGLING')
  expect(renameForCompatibility({ id: 1, name: 'ChangelingZerglingWings' }).name).toEqual(
    'ZERG_CHANGELINGZERGLINGWINGS'
  )
  expect(renameForCompatibility({ id: 1, name: 'Corruptor' }).name).toEqual('ZERG_CORRUPTOR')
  expect(renameForCompatibility({ id: 1, name: 'CreepTumor' }).name).toEqual('ZERG_CREEPTUMOR')
  expect(renameForCompatibility({ id: 1, name: 'CreepTumorBurrowed' }).name).toEqual('ZERG_CREEPTUMORBURROWED')
  expect(renameForCompatibility({ id: 1, name: 'CreepTumorQueen' }).name).toEqual('ZERG_CREEPTUMORQUEEN')
  expect(renameForCompatibility({ id: 1, name: 'Drone' }).name).toEqual('ZERG_DRONE')
  expect(renameForCompatibility({ id: 1, name: 'DroneBurrowed' }).name).toEqual('ZERG_DRONEBURROWED')
  expect(renameForCompatibility({ id: 1, name: 'Egg' }).name).toEqual('ZERG_EGG')
  expect(renameForCompatibility({ id: 1, name: 'EvolutionChamber' }).name).toEqual('ZERG_EVOLUTIONCHAMBER')
  expect(renameForCompatibility({ id: 1, name: 'Extractor' }).name).toEqual('ZERG_EXTRACTOR')
  expect(renameForCompatibility({ id: 1, name: 'ExtractorRich' }).name).toEqual('ZERG_EXTRACTORRICH')
  expect(renameForCompatibility({ id: 1, name: 'GreaterSpire' }).name).toEqual('ZERG_GREATERSPIRE')
  expect(renameForCompatibility({ id: 1, name: 'Hatchery' }).name).toEqual('ZERG_HATCHERY')
  expect(renameForCompatibility({ id: 1, name: 'Hive' }).name).toEqual('ZERG_HIVE')
  expect(renameForCompatibility({ id: 1, name: 'Hydralisk' }).name).toEqual('ZERG_HYDRALISK')
  expect(renameForCompatibility({ id: 1, name: 'HydraliskBurrowed' }).name).toEqual('ZERG_HYDRALISKBURROWED')
  expect(renameForCompatibility({ id: 1, name: 'HydraliskDen' }).name).toEqual('ZERG_HYDRALISKDEN')
  expect(renameForCompatibility({ id: 1, name: 'InfestationPit' }).name).toEqual('ZERG_INFESTATIONPIT')
  expect(renameForCompatibility({ id: 1, name: 'InfestedTerransEgg' }).name).toEqual('ZERG_INFESTEDTERRANSEGG')
  expect(renameForCompatibility({ id: 1, name: 'Infestor' }).name).toEqual('ZERG_INFESTOR')
  expect(renameForCompatibility({ id: 1, name: 'InfestorBurrowed' }).name).toEqual('ZERG_INFESTORBURROWED')
  expect(renameForCompatibility({ id: 1, name: 'Lair' }).name).toEqual('ZERG_LAIR')
  expect(renameForCompatibility({ id: 1, name: 'Larva' }).name).toEqual('ZERG_LARVA')
  expect(renameForCompatibility({ id: 1, name: 'LocustMP' }).name).toEqual('ZERG_LOCUSTMP')
  expect(renameForCompatibility({ id: 1, name: 'LocustMPFlying' }).name).toEqual('ZERG_LOCUSTMPFLYING')
  expect(renameForCompatibility({ id: 1, name: 'LurkerDenMP' }).name).toEqual('ZERG_LURKERDENMP')
  expect(renameForCompatibility({ id: 1, name: 'LurkerMP' }).name).toEqual('ZERG_LURKERMP')
  expect(renameForCompatibility({ id: 1, name: 'LurkerMPBurrowed' }).name).toEqual('ZERG_LURKERMPBURROWED')
  expect(renameForCompatibility({ id: 1, name: 'LurkerMPEgg' }).name).toEqual('ZERG_LURKERMPEGG')
  expect(renameForCompatibility({ id: 1, name: 'Mutalisk' }).name).toEqual('ZERG_MUTALISK')
  expect(renameForCompatibility({ id: 1, name: 'NydusCanal' }).name).toEqual('ZERG_NYDUSCANAL')
  expect(renameForCompatibility({ id: 1, name: 'NydusNetwork' }).name).toEqual('ZERG_NYDUSNETWORK')
  expect(renameForCompatibility({ id: 1, name: 'Overlord' }).name).toEqual('ZERG_OVERLORD')
  expect(renameForCompatibility({ id: 1, name: 'OverlordCocoon' }).name).toEqual('ZERG_OVERLORDCOCOON')
  expect(renameForCompatibility({ id: 1, name: 'OverlordTransport' }).name).toEqual('ZERG_OVERLORDTRANSPORT')
  expect(renameForCompatibility({ id: 1, name: 'Overseer' }).name).toEqual('ZERG_OVERSEER')
  expect(renameForCompatibility({ id: 1, name: 'ParasiticBombDummy' }).name).toEqual('ZERG_PARASITICBOMBDUMMY')
  expect(renameForCompatibility({ id: 1, name: 'Queen' }).name).toEqual('ZERG_QUEEN')
  expect(renameForCompatibility({ id: 1, name: 'QueenBurrowed' }).name).toEqual('ZERG_QUEENBURROWED')
  expect(renameForCompatibility({ id: 1, name: 'Ravager' }).name).toEqual('ZERG_RAVAGER')
  expect(renameForCompatibility({ id: 1, name: 'RavagerCocoon' }).name).toEqual('ZERG_RAVAGERCOCOON')
  expect(renameForCompatibility({ id: 1, name: 'Roach' }).name).toEqual('ZERG_ROACH')
  expect(renameForCompatibility({ id: 1, name: 'RoachBurrowed' }).name).toEqual('ZERG_ROACHBURROWED')
  expect(renameForCompatibility({ id: 1, name: 'RoachWarren' }).name).toEqual('ZERG_ROACHWARREN')
  expect(renameForCompatibility({ id: 1, name: 'SpawningPool' }).name).toEqual('ZERG_SPAWNINGPOOL')
  expect(renameForCompatibility({ id: 1, name: 'SpineCrawler' }).name).toEqual('ZERG_SPINECRAWLER')
  expect(renameForCompatibility({ id: 1, name: 'SpineCrawlerUprooted' }).name).toEqual('ZERG_SPINECRAWLERUPROOTED')
  expect(renameForCompatibility({ id: 1, name: 'Spire' }).name).toEqual('ZERG_SPIRE')
  expect(renameForCompatibility({ id: 1, name: 'SporeCrawler' }).name).toEqual('ZERG_SPORECRAWLER')
  expect(renameForCompatibility({ id: 1, name: 'SporeCrawlerUprooted' }).name).toEqual('ZERG_SPORECRAWLERUPROOTED')
  expect(renameForCompatibility({ id: 1, name: 'SwarmHostBurrowedMP' }).name).toEqual('ZERG_SWARMHOSTBURROWEDMP')
  expect(renameForCompatibility({ id: 1, name: 'SwarmHostMP' }).name).toEqual('ZERG_SWARMHOSTMP')
  expect(renameForCompatibility({ id: 1, name: 'TransportOverlordCocoon' }).name).toEqual(
    'ZERG_TRANSPORTOVERLORDCOCOON'
  )
  expect(renameForCompatibility({ id: 1, name: 'Ultralisk' }).name).toEqual('ZERG_ULTRALISK')
  expect(renameForCompatibility({ id: 1, name: 'UltraliskCavern' }).name).toEqual('ZERG_ULTRALISKCAVERN')
  expect(renameForCompatibility({ id: 1, name: 'Viper' }).name).toEqual('ZERG_VIPER')
  expect(renameForCompatibility({ id: 1, name: 'Zergling' }).name).toEqual('ZERG_ZERGLING')
  expect(renameForCompatibility({ id: 1, name: 'ZerglingBurrowed' }).name).toEqual('ZERG_ZERGLINGBURROWED')
})
